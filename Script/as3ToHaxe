#!/bin/bash
#
# as3ToHaxe bash script 1.1, 2013
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of 
# this software and associated documentation files (the "Software"), to deal in 
# the Software without restriction, including without limitation the rights to 
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies 
# of the Software, and to permit persons to whom the Software is furnished to do 
# so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all 
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE 
# SOFTWARE.
# 
#

# vars
NAME=`basename "$0"`
VERSION=1.0

LIB_PATH="/usr/local/As3ToHaxe/"
BIN_PATH="${LIB_PATH}/As3ToHaxe.n"

VERBOSE=0

EXPECTED_FLAGS="[-h] [-v] source_directory target_directory"

PRINT_VERSION(){
	echo ${NAME}, version ${VERSION}
}

PRINT_HELP(){
	echo usage: ${NAME} ${EXPECTED_FLAGS}
	echo "Type '${NAME} --version' to see the program version"
	echo 
	echo "Options"
	echo " -v            	   show verbose"
	echo "(-h)           	   show this help"
}

while getopts ":v:-h" VALUE "${@}" ; do
	if [ "${VALUE}" = "h" ] ; then
		PRINT_HELP
		exit 0
	fi
	if [ "${VALUE}" = "v" ] ; then
		VERBOSE=1
		shift
	fi
	if [ "${VALUE}" = "-" ] ; then
		if [ "$1" = "--version" ] ; then
			PRINT_VERSION
			exit 0
		fi
		echo "Unknown flag -${OPTARG} detected."
		echo "Usage: $0 ${EXPECTED_FLAGS}"
		exit 1
	fi
	if [ "${VALUE}" = ":" ] ; then
        echo "Flag -${OPTARG} requires an argument."
        echo "Usage: $0 ${EXPECTED_FLAGS}"
        exit 1
    fi
	if [ "${VALUE}" = "?" ] ; then
		echo ${VALUE}
		echo "Unknown flag -${OPTARG} detected."
		echo "Usage: $0 ${EXPECTED_FLAGS}"
		exit 1
	fi
done

if [ "$#" -gt 2 ]; then
  echo "Too many arguments."
  echo "Usage: $0 ${EXPECTED_FLAGS}"
  exit 1
fi

if [ "$#" -eq 2 ]; then
	if [[ ! -e "$1" ]]; then
		echo "$1 is not a path to a directory"
		echo "Usage: $0 ${EXPECTED_FLAGS}"
		exit 1
	fi
	FROM="$1"
	if [[ ! -e "$2" ]]; then
		echo "$2 is not a path to a directory"
		echo "Usage: $0 ${EXPECTED_FLAGS}"
		exit 1
	fi
	TO="$2"
fi

if [ "$#" -lt 2 ]; then
	echo "Too few arguments."
	echo "Usage: $0 ${EXPECTED_FLAGS}"
	exit 1
fi

if [ "$VERBOSE" -gt 0 ]; then
	echo "converting AS3 src: ${FROM} to Haxe src ${TO}"
fi
neko BIN_PATH -from ${FROM} -to ${TO}